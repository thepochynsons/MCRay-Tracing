//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	_Z6raygenv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .u32 max_depth;
.global .align 4 .u32 max_rows;
.global .align 4 .f32 scene_epsilon;
.global .align 4 .f32 axial_resolution;
.global .align 4 .f32 speed_of_sound;
.global .align 4 .b8 bad_color[12];
.global .align 4 .b8 top_object[4];
.global .align 4 .f32 transducer_frequency;
.global .align 4 .f32 start_attenuation;
.global .align 4 .f32 start_impedance;
.global .align 4 .f32 start_mu0;
.global .align 4 .f32 start_mu1;
.global .align 4 .f32 start_sigma;
.global .align 4 .u32 start_index;
.global .align 4 .u32 launch_id;
.global .align 4 .u32 samples_te;
.global .align 4 .f32 max_travel_time;
.global .align 4 .u32 transducer_elements;
.global .align 4 .b8 spacing[12];
.global .align 1 .b8 transducer_positions_buffer[1];
.global .align 1 .b8 transducer_directions_buffer[1];
.global .align 1 .b8 results[1];
.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 segments_buffer[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo9max_depthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8max_rowsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16axial_resolutionE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14speed_of_soundE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo20transducer_frequencyE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17start_attenuationE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15start_impedanceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9start_mu0E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9start_mu1E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11start_sigmaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11start_indexE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9launch_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10samples_teE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15max_travel_timeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19transducer_elementsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7spacingE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename9max_depthE[5] = {117, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8max_rowsE[5] = {117, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename16axial_resolutionE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14speed_of_soundE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename20transducer_frequencyE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename17start_attenuationE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename15start_impedanceE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9start_mu0E[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9start_mu1E[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11start_sigmaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename11start_indexE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9launch_idE[5] = {117, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10samples_teE[5] = {117, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename15max_travel_timeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename19transducer_elementsE[5] = {117, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename7spacingE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum9max_depthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8max_rowsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16axial_resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14speed_of_soundE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum20transducer_frequencyE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17start_attenuationE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15start_impedanceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9start_mu0E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9start_mu1E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11start_sigmaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11start_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9launch_idE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10samples_teE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15max_travel_timeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19transducer_elementsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7spacingE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic9max_depthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8max_rowsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16axial_resolutionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14speed_of_soundE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic20transducer_frequencyE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17start_attenuationE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15start_impedanceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9start_mu0E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9start_mu1E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11start_sigmaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11start_indexE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9launch_idE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10samples_teE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15max_travel_timeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19transducer_elementsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7spacingE[1];
.global .align 16 .b8 _ZN23rti_internal_annotation9max_depthE[24] = {34, 77, 97, 120, 32, 97, 109, 111, 117, 110, 116, 32, 111, 102, 32, 98, 111, 117, 110, 99, 101, 115, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation8max_rowsE[38] = {34, 77, 97, 120, 32, 110, 117, 109, 98, 101, 114, 32, 111, 102, 32, 114, 111, 119, 115, 32, 105, 110, 32, 111, 117, 116, 112, 117, 116, 95, 98, 117, 102, 102, 101, 114, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation13scene_epsilonE[30] = {34, 77, 105, 110, 105, 109, 97, 108, 32, 105, 109, 112, 111, 114, 116, 97, 110, 99, 101, 32, 97, 100, 109, 105, 116, 101, 100, 46, 34, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation16axial_resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14speed_of_soundE[1];
.global .align 16 .b8 _ZN23rti_internal_annotation9bad_colorE[19] = {34, 69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 99, 111, 108, 111, 114, 46, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation10top_objectE[9] = {34, 83, 99, 101, 110, 101, 46, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation20transducer_frequencyE[24] = {34, 84, 114, 97, 110, 115, 100, 117, 99, 101, 114, 32, 102, 114, 101, 113, 117, 101, 110, 99, 121, 46, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation17start_attenuationE[34] = {34, 73, 110, 105, 116, 105, 97, 108, 32, 109, 97, 116, 101, 114, 105, 97, 108, 39, 115, 32, 97, 116, 116, 101, 110, 117, 97, 116, 105, 111, 110, 46, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation15start_impedanceE[32] = {34, 73, 110, 105, 116, 105, 97, 108, 32, 109, 97, 116, 101, 114, 105, 97, 108, 39, 115, 32, 105, 109, 112, 101, 100, 97, 110, 99, 101, 46, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation9start_mu0E[26] = {34, 73, 110, 105, 116, 105, 97, 108, 32, 109, 97, 116, 101, 114, 105, 97, 108, 39, 115, 32, 109, 117, 48, 46, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation9start_mu1E[26] = {34, 73, 110, 105, 116, 105, 97, 108, 32, 109, 97, 116, 101, 114, 105, 97, 108, 39, 115, 32, 109, 117, 49, 46, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation11start_sigmaE[28] = {34, 73, 110, 105, 116, 105, 97, 108, 32, 109, 97, 116, 101, 114, 105, 97, 108, 39, 115, 32, 115, 105, 103, 109, 97, 46, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation11start_indexE[28] = {34, 73, 110, 105, 116, 105, 97, 108, 32, 109, 97, 116, 101, 114, 105, 97, 108, 39, 115, 32, 105, 110, 100, 101, 120, 46, 34, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation9launch_idE[1];
.global .align 16 .b8 _ZN23rti_internal_annotation10samples_teE[39] = {34, 72, 111, 119, 32, 109, 97, 110, 121, 32, 115, 97, 109, 112, 108, 101, 115, 32, 112, 101, 114, 32, 114, 97, 121, 32, 97, 114, 101, 32, 99, 97, 115, 116, 101, 100, 46, 34, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation15max_travel_timeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19transducer_elementsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7spacingE[1];
.global .align 16 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str1[70] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 82, 65, 67, 69, 95, 68, 69, 80, 84, 72, 95, 69, 88, 67, 69, 69, 68, 69, 68, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str2[236] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 100, 101, 116, 97, 105, 108, 115, 32, 58, 32, 37, 115, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str3[138] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 16 .b8 $str4[148] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 16 .b8 $str5[136] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 16 .b8 $str6[98] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str7[126] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str8[99] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str9[135] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 16 .b8 $str10[94] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str11[53] = {32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 16 .b8 $str12[133] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 0};
.global .align 16 .b8 $str13[141] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str14[200] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 16 .b8 $str15[164] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 65, 89, 76, 79, 65, 68, 95, 65, 67, 67, 69, 83, 83, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 118, 97, 108, 117, 101, 32, 111, 102, 102, 115, 101, 116, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 118, 97, 108, 117, 101, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 112, 97, 121, 108, 111, 97, 100, 32, 115, 105, 122, 101, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str16[123] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 67, 79, 68, 69, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 108, 111, 99, 97, 116, 105, 111, 110, 32, 32, 32, 32, 32, 58, 32, 37, 115, 10, 32, 32, 99, 111, 100, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str18[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str19[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};

.visible .entry _Z6raygenv(

)
{
	.local .align 16 .b8 	__local_depot0[400];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<143>;
	.reg .b32 	%r<206>;
	.reg .b64 	%rd<72>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd21, %SP, 240;
	cvta.to.local.u64 	%rd1, %rd21;
	add.u64 	%rd22, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd22;
	ld.global.u32 	%rd11, [launch_id];
	mov.u64 	%rd23, transducer_positions_buffer;
	cvta.global.u64 	%rd10, %rd23;
	mov.u32 	%r21, 1;
	mov.u32 	%r22, 12;
	mov.u64 	%rd20, 0;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r21, %r22, %rd11, %rd20, %rd20, %rd20);
	// inline asm
	ld.f32 	%f3, [%rd9+8];
	ld.f32 	%f2, [%rd9+4];
	ld.f32 	%f1, [%rd9];
	ld.global.u32 	%rd17, [launch_id];
	mov.u64 	%rd24, transducer_directions_buffer;
	cvta.global.u64 	%rd16, %rd24;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r21, %r22, %rd17, %rd20, %rd20, %rd20);
	// inline asm
	ld.f32 	%f6, [%rd15+8];
	ld.f32 	%f5, [%rd15+4];
	ld.f32 	%f4, [%rd15];
	mov.u32 	%r23, 0;
	ld.global.u32 	%r205, [max_depth];
	mov.u32 	%r201, %r23;

BB0_1:
	add.u64 	%rd25, %SP, 160;
	cvta.to.local.u64 	%rd3, %rd25;
	st.local.f32 	[%rd3], %f1;
	st.local.f32 	[%rd3+4], %f2;
	st.local.f32 	[%rd3+8], %f3;
	st.local.f32 	[%rd3+12], %f4;
	st.local.f32 	[%rd3+16], %f5;
	st.local.f32 	[%rd3+20], %f6;
	mov.u32 	%r25, 1065353216;
	st.local.u32 	[%rd3+24], %r25;
	st.local.u32 	[%rd3+28], %r23;
	st.local.u32 	[%rd3+68], %r201;
	st.local.u32 	[%rd3+32], %r23;
	st.local.u32 	[%rd3+36], %r23;
	st.local.u32 	[%rd3+60], %r23;
	mov.u32 	%r26, -1;
	st.local.u32 	[%rd3+72], %r26;
	ld.global.f32 	%f47, [start_attenuation];
	st.local.f32 	[%rd3+44], %f47;
	ld.global.f32 	%f48, [start_impedance];
	st.local.f32 	[%rd3+40], %f48;
	ld.global.f32 	%f49, [start_mu0];
	st.local.f32 	[%rd3+48], %f49;
	ld.global.f32 	%f50, [start_mu1];
	st.local.f32 	[%rd3+52], %f50;
	ld.global.f32 	%f51, [start_sigma];
	st.local.f32 	[%rd3+56], %f51;
	mov.f32 	%f52, 0fBF800000;
	mov.f32 	%f53, 0f00000000;
	st.local.v4.f32 	[%rd1], {%f47, %f48, %f53, %f52};
	setp.eq.s32	%p3, %r205, 0;
	mov.f32 	%f141, 0f3F800000;
	mov.u32 	%r204, %r23;
	@%p3 bra 	BB0_21;
	bra.uni 	BB0_2;

BB0_20:
	ld.local.f32 	%f141, [%rd3+24];

BB0_2:
	ld.global.f32 	%f8, [scene_epsilon];
	setp.lt.f32	%p4, %f141, %f8;
	@%p4 bra 	BB0_21;

	ld.local.f32 	%f16, [%rd3+32];
	ld.local.f32 	%f25, [%rd3+12];
	ld.local.f32 	%f11, [%rd3+8];
	ld.local.f32 	%f10, [%rd3+4];
	ld.local.f32 	%f9, [%rd3];
	ld.local.f32 	%f28, [%rd3+24];
	ld.local.f32 	%f27, [%rd3+20];
	ld.local.f32 	%f26, [%rd3+16];
	div.rn.f32 	%f54, %f8, %f28;
	setp.lt.f32	%p5, %f54, 0f00800000;
	mul.f32 	%f55, %f54, 0f4B000000;
	selp.f32	%f29, %f55, %f54, %p5;
	selp.f32	%f56, 0fC1B80000, 0f00000000, %p5;
	mov.b32 	 %r27, %f29;
	add.s32 	%r28, %r27, -1059760811;
	and.b32  	%r29, %r28, -8388608;
	sub.s32 	%r30, %r27, %r29;
	mov.b32 	 %f57, %r30;
	cvt.rn.f32.s32	%f58, %r29;
	mov.f32 	%f59, 0f34000000;
	fma.rn.f32 	%f60, %f58, %f59, %f56;
	add.f32 	%f61, %f57, 0fBF800000;
	mov.f32 	%f62, 0f3E1039F6;
	mov.f32 	%f63, 0fBE055027;
	fma.rn.f32 	%f64, %f63, %f61, %f62;
	mov.f32 	%f65, 0fBDF8CDCC;
	fma.rn.f32 	%f66, %f64, %f61, %f65;
	mov.f32 	%f67, 0f3E0F2955;
	fma.rn.f32 	%f68, %f66, %f61, %f67;
	mov.f32 	%f69, 0fBE2AD8B9;
	fma.rn.f32 	%f70, %f68, %f61, %f69;
	mov.f32 	%f71, 0f3E4CED0B;
	fma.rn.f32 	%f72, %f70, %f61, %f71;
	mov.f32 	%f73, 0fBE7FFF22;
	fma.rn.f32 	%f74, %f72, %f61, %f73;
	mov.f32 	%f75, 0f3EAAAA78;
	fma.rn.f32 	%f76, %f74, %f61, %f75;
	mov.f32 	%f77, 0fBF000000;
	fma.rn.f32 	%f78, %f76, %f61, %f77;
	mul.f32 	%f79, %f61, %f78;
	fma.rn.f32 	%f80, %f79, %f61, %f61;
	mov.f32 	%f81, 0f3F317218;
	fma.rn.f32 	%f142, %f60, %f81, %f80;
	setp.lt.u32	%p6, %r27, 2139095040;
	@%p6 bra 	BB0_5;

	mov.f32 	%f82, 0f7F800000;
	fma.rn.f32 	%f142, %f29, %f82, %f82;

BB0_5:
	ld.local.f32 	%f85, [%rd3+8];
	ld.local.f32 	%f84, [%rd3+4];
	ld.local.f32 	%f83, [%rd3];
	mul.f32 	%f91, %f142, 0f41200000;
	setp.eq.f32	%p8, %f29, 0f00000000;
	selp.f32	%f92, 0fFF800000, %f91, %p8;
	cvt.s64.s32	%rd5, %r204;
	mul.wide.s32 	%rd39, %r204, 16;
	add.s64 	%rd6, %rd1, %rd39;
	ld.local.f32 	%f36, [%rd6];
	div.rn.f32 	%f93, %f92, %f36;
	ld.global.f32 	%f94, [transducer_frequency];
	mul.f32 	%f95, %f93, %f94;
	div.rn.f32 	%f96, %f95, 0f42C80000;
	ld.local.f32 	%f97, [%rd3+12];
	ld.global.f32 	%f98, [spacing];
	mul.f32 	%f99, %f98, %f97;
	ld.local.f32 	%f100, [%rd3+16];
	ld.global.f32 	%f101, [spacing+4];
	mul.f32 	%f102, %f101, %f100;
	ld.local.f32 	%f103, [%rd3+20];
	ld.global.f32 	%f104, [spacing+8];
	mul.f32 	%f105, %f104, %f103;
	ld.local.f32 	%f106, [%rd3];
	fma.rn.f32 	%f37, %f96, %f99, %f106;
	ld.local.f32 	%f107, [%rd3+4];
	fma.rn.f32 	%f38, %f96, %f102, %f107;
	ld.local.f32 	%f108, [%rd3+8];
	fma.rn.f32 	%f39, %f96, %f105, %f108;
	ld.global.u32 	%r31, [top_object];
	mov.f32 	%f90, 0f6C4ECB8F;
	mov.u32 	%r33, 255;
	mov.u32 	%r34, 0;
	mov.u32 	%r35, 80;
	// inline asm
	call _rt_trace_mask_flags_64, (%r31, %f83, %f84, %f85, %f25, %f26, %f27, %r34, %f8, %f90, %r33, %r34, %rd25, %r35);
	// inline asm
	ld.global.u32 	%rd29, [launch_id];
	mov.u64 	%rd40, results;
	cvta.global.u64 	%rd28, %rd40;
	mov.u32 	%r39, 4;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r21, %r39, %rd29, %rd20, %rd20, %rd20);
	// inline asm
	ld.u32 	%r40, [%rd27];
	add.s32 	%r41, %r40, 1;
	ld.global.u32 	%rd35, [launch_id];
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd28, %r21, %r39, %rd35, %rd20, %rd20, %rd20);
	// inline asm
	st.u32 	[%rd33], %r41;
	ld.local.u32 	%r10, [%rd3+28];
	ld.local.f32 	%f109, [%rd3];
	mov.pred 	%p24, 0;
	setp.neu.f32	%p9, %f9, %f109;
	@%p9 bra 	BB0_8;

	ld.local.f32 	%f110, [%rd3+4];
	setp.neu.f32	%p11, %f10, %f110;
	@%p11 bra 	BB0_8;

	ld.local.f32 	%f111, [%rd3+8];
	setp.eq.f32	%p24, %f11, %f111;

BB0_8:
	ld.global.u32 	%r42, [max_depth];
	ld.global.u32 	%r43, [transducer_elements];
	ld.global.u32 	%r44, [launch_id];
	mad.lo.s32 	%r45, %r42, %r201, %r10;
	mad.lo.s32 	%r46, %r45, %r43, %r44;
	cvt.u64.u32	%rd7, %r46;
	shl.b64 	%rd41, %rd5, 4;
	add.s64 	%rd8, %rd2, %rd41;
	@%p24 bra 	BB0_10;
	bra.uni 	BB0_9;

BB0_10:
	mov.u64 	%rd55, segments_buffer;
	cvta.global.u64 	%rd50, %rd55;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r21, %r35, %rd7, %rd20, %rd20, %rd20);
	// inline asm
	ld.local.v4.f32 	{%f119, %f120, %f121, %f122}, [%rd8];
	ld.global.u32 	%r127, [launch_id];
	ld.local.u32 	%r128, [%rd3+28];
	ld.local.u32 	%r129, [%rd3+68];
	mov.b32 	 %r130, %f9;
	shr.u32 	%r131, %r130, 24;
	st.u8 	[%rd49+3], %r131;
	shr.u32 	%r132, %r130, 16;
	st.u8 	[%rd49+2], %r132;
	shr.u32 	%r133, %r130, 8;
	st.u8 	[%rd49+1], %r133;
	st.u8 	[%rd49], %r130;
	mov.b32 	 %r134, %f10;
	shr.u32 	%r135, %r134, 24;
	st.u8 	[%rd49+7], %r135;
	shr.u32 	%r136, %r134, 16;
	st.u8 	[%rd49+6], %r136;
	shr.u32 	%r137, %r134, 8;
	st.u8 	[%rd49+5], %r137;
	st.u8 	[%rd49+4], %r134;
	mov.b32 	 %r138, %f11;
	shr.u32 	%r139, %r138, 24;
	st.u8 	[%rd49+11], %r139;
	shr.u32 	%r140, %r138, 16;
	st.u8 	[%rd49+10], %r140;
	shr.u32 	%r141, %r138, 8;
	st.u8 	[%rd49+9], %r141;
	st.u8 	[%rd49+8], %r138;
	mov.b32 	 %r142, %f37;
	shr.u32 	%r143, %r142, 24;
	st.u8 	[%rd49+15], %r143;
	shr.u32 	%r144, %r142, 16;
	st.u8 	[%rd49+14], %r144;
	shr.u32 	%r145, %r142, 8;
	st.u8 	[%rd49+13], %r145;
	st.u8 	[%rd49+12], %r142;
	mov.b32 	 %r146, %f38;
	shr.u32 	%r147, %r146, 24;
	st.u8 	[%rd49+19], %r147;
	shr.u32 	%r148, %r146, 16;
	st.u8 	[%rd49+18], %r148;
	shr.u32 	%r149, %r146, 8;
	st.u8 	[%rd49+17], %r149;
	st.u8 	[%rd49+16], %r146;
	mov.b32 	 %r150, %f39;
	shr.u32 	%r151, %r150, 24;
	st.u8 	[%rd49+23], %r151;
	shr.u32 	%r152, %r150, 16;
	st.u8 	[%rd49+22], %r152;
	shr.u32 	%r153, %r150, 8;
	st.u8 	[%rd49+21], %r153;
	st.u8 	[%rd49+20], %r150;
	mov.b32 	 %r154, %f25;
	shr.u32 	%r155, %r154, 24;
	st.u8 	[%rd49+27], %r155;
	shr.u32 	%r156, %r154, 16;
	st.u8 	[%rd49+26], %r156;
	shr.u32 	%r157, %r154, 8;
	st.u8 	[%rd49+25], %r157;
	st.u8 	[%rd49+24], %r154;
	mov.b32 	 %r158, %f26;
	shr.u32 	%r159, %r158, 24;
	st.u8 	[%rd49+31], %r159;
	shr.u32 	%r160, %r158, 16;
	st.u8 	[%rd49+30], %r160;
	shr.u32 	%r161, %r158, 8;
	st.u8 	[%rd49+29], %r161;
	st.u8 	[%rd49+28], %r158;
	mov.b32 	 %r162, %f27;
	shr.u32 	%r163, %r162, 24;
	st.u8 	[%rd49+35], %r163;
	shr.u32 	%r164, %r162, 16;
	st.u8 	[%rd49+34], %r164;
	shr.u32 	%r165, %r162, 8;
	st.u8 	[%rd49+33], %r165;
	st.u8 	[%rd49+32], %r162;
	st.u8 	[%rd49+39], %r34;
	st.u8 	[%rd49+38], %r34;
	st.u8 	[%rd49+37], %r34;
	st.u8 	[%rd49+36], %r34;
	st.u8 	[%rd49+43], %r34;
	st.u8 	[%rd49+42], %r34;
	st.u8 	[%rd49+41], %r34;
	st.u8 	[%rd49+40], %r34;
	mov.b32 	 %r167, %f36;
	shr.u32 	%r168, %r167, 24;
	st.u8 	[%rd49+47], %r168;
	shr.u32 	%r169, %r167, 16;
	st.u8 	[%rd49+46], %r169;
	shr.u32 	%r170, %r167, 8;
	st.u8 	[%rd49+45], %r170;
	st.u8 	[%rd49+44], %r167;
	mov.b32 	 %r171, %f119;
	st.u8 	[%rd49+48], %r171;
	shr.u32 	%r172, %r171, 24;
	st.u8 	[%rd49+51], %r172;
	shr.u32 	%r173, %r171, 16;
	st.u8 	[%rd49+50], %r173;
	shr.u32 	%r174, %r171, 8;
	st.u8 	[%rd49+49], %r174;
	mov.b32 	 %r175, %f120;
	st.u8 	[%rd49+52], %r175;
	shr.u32 	%r176, %r175, 24;
	st.u8 	[%rd49+55], %r176;
	shr.u32 	%r177, %r175, 16;
	st.u8 	[%rd49+54], %r177;
	shr.u32 	%r178, %r175, 8;
	st.u8 	[%rd49+53], %r178;
	mov.b32 	 %r179, %f121;
	st.u8 	[%rd49+56], %r179;
	shr.u32 	%r180, %r179, 24;
	st.u8 	[%rd49+59], %r180;
	shr.u32 	%r181, %r179, 16;
	st.u8 	[%rd49+58], %r181;
	shr.u32 	%r182, %r179, 8;
	st.u8 	[%rd49+57], %r182;
	mov.b32 	 %r183, %f16;
	shr.u32 	%r184, %r183, 24;
	st.u8 	[%rd49+63], %r184;
	shr.u32 	%r185, %r183, 16;
	st.u8 	[%rd49+62], %r185;
	shr.u32 	%r186, %r183, 8;
	st.u8 	[%rd49+61], %r186;
	st.u8 	[%rd49+60], %r183;
	st.u8 	[%rd49+64], %r127;
	shr.u32 	%r187, %r127, 24;
	st.u8 	[%rd49+67], %r187;
	shr.u32 	%r188, %r127, 16;
	st.u8 	[%rd49+66], %r188;
	shr.u32 	%r189, %r127, 8;
	st.u8 	[%rd49+65], %r189;
	st.u8 	[%rd49+68], %r128;
	shr.u32 	%r190, %r128, 24;
	st.u8 	[%rd49+71], %r190;
	shr.u32 	%r191, %r128, 16;
	st.u8 	[%rd49+70], %r191;
	shr.u32 	%r192, %r128, 8;
	st.u8 	[%rd49+69], %r192;
	st.u8 	[%rd49+72], %r129;
	shr.u32 	%r193, %r129, 24;
	st.u8 	[%rd49+75], %r193;
	shr.u32 	%r194, %r129, 16;
	st.u8 	[%rd49+74], %r194;
	shr.u32 	%r195, %r129, 8;
	st.u8 	[%rd49+73], %r195;
	mov.u16 	%rs2, 0;
	st.u8 	[%rd49+76], %rs2;
	bra.uni 	BB0_11;

BB0_9:
	mov.u64 	%rd48, segments_buffer;
	cvta.global.u64 	%rd43, %rd48;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r21, %r35, %rd7, %rd20, %rd20, %rd20);
	// inline asm
	ld.local.v4.f32 	{%f112, %f113, %f114, %f115}, [%rd8];
	ld.global.u32 	%r49, [launch_id];
	ld.local.u32 	%r50, [%rd3+28];
	ld.local.u32 	%r51, [%rd3+68];
	mov.b32 	 %r52, %f9;
	shr.u32 	%r53, %r52, 24;
	ld.local.u32 	%r54, [%rd3];
	ld.local.u32 	%r55, [%rd3+4];
	ld.local.u32 	%r56, [%rd3+8];
	ld.local.u32 	%r57, [%rd3+60];
	st.u8 	[%rd42+3], %r53;
	shr.u32 	%r58, %r52, 16;
	st.u8 	[%rd42+2], %r58;
	shr.u32 	%r59, %r52, 8;
	st.u8 	[%rd42+1], %r59;
	st.u8 	[%rd42], %r52;
	mov.b32 	 %r60, %f10;
	shr.u32 	%r61, %r60, 24;
	st.u8 	[%rd42+7], %r61;
	shr.u32 	%r62, %r60, 16;
	st.u8 	[%rd42+6], %r62;
	shr.u32 	%r63, %r60, 8;
	st.u8 	[%rd42+5], %r63;
	st.u8 	[%rd42+4], %r60;
	mov.b32 	 %r64, %f11;
	shr.u32 	%r65, %r64, 24;
	st.u8 	[%rd42+11], %r65;
	shr.u32 	%r66, %r64, 16;
	st.u8 	[%rd42+10], %r66;
	shr.u32 	%r67, %r64, 8;
	st.u8 	[%rd42+9], %r67;
	st.u8 	[%rd42+8], %r64;
	st.u8 	[%rd42+12], %r54;
	shr.u32 	%r68, %r54, 24;
	st.u8 	[%rd42+15], %r68;
	shr.u32 	%r69, %r54, 16;
	st.u8 	[%rd42+14], %r69;
	shr.u32 	%r70, %r54, 8;
	st.u8 	[%rd42+13], %r70;
	st.u8 	[%rd42+16], %r55;
	shr.u32 	%r71, %r55, 24;
	st.u8 	[%rd42+19], %r71;
	shr.u32 	%r72, %r55, 16;
	st.u8 	[%rd42+18], %r72;
	shr.u32 	%r73, %r55, 8;
	st.u8 	[%rd42+17], %r73;
	st.u8 	[%rd42+20], %r56;
	shr.u32 	%r74, %r56, 24;
	st.u8 	[%rd42+23], %r74;
	shr.u32 	%r75, %r56, 16;
	st.u8 	[%rd42+22], %r75;
	shr.u32 	%r76, %r56, 8;
	st.u8 	[%rd42+21], %r76;
	mov.b32 	 %r77, %f25;
	shr.u32 	%r78, %r77, 24;
	st.u8 	[%rd42+27], %r78;
	shr.u32 	%r79, %r77, 16;
	st.u8 	[%rd42+26], %r79;
	shr.u32 	%r80, %r77, 8;
	st.u8 	[%rd42+25], %r80;
	st.u8 	[%rd42+24], %r77;
	mov.b32 	 %r81, %f26;
	shr.u32 	%r82, %r81, 24;
	st.u8 	[%rd42+31], %r82;
	shr.u32 	%r83, %r81, 16;
	st.u8 	[%rd42+30], %r83;
	shr.u32 	%r84, %r81, 8;
	st.u8 	[%rd42+29], %r84;
	st.u8 	[%rd42+28], %r81;
	mov.b32 	 %r85, %f27;
	shr.u32 	%r86, %r85, 24;
	st.u8 	[%rd42+35], %r86;
	shr.u32 	%r87, %r85, 16;
	st.u8 	[%rd42+34], %r87;
	shr.u32 	%r88, %r85, 8;
	st.u8 	[%rd42+33], %r88;
	st.u8 	[%rd42+32], %r85;
	st.u8 	[%rd42+36], %r57;
	shr.u32 	%r89, %r57, 24;
	st.u8 	[%rd42+39], %r89;
	shr.u32 	%r90, %r57, 16;
	st.u8 	[%rd42+38], %r90;
	shr.u32 	%r91, %r57, 8;
	st.u8 	[%rd42+37], %r91;
	mov.b32 	 %r92, %f28;
	shr.u32 	%r93, %r92, 24;
	st.u8 	[%rd42+43], %r93;
	shr.u32 	%r94, %r92, 16;
	st.u8 	[%rd42+42], %r94;
	shr.u32 	%r95, %r92, 8;
	st.u8 	[%rd42+41], %r95;
	st.u8 	[%rd42+40], %r92;
	mov.b32 	 %r96, %f36;
	shr.u32 	%r97, %r96, 24;
	st.u8 	[%rd42+47], %r97;
	shr.u32 	%r98, %r96, 16;
	st.u8 	[%rd42+46], %r98;
	shr.u32 	%r99, %r96, 8;
	st.u8 	[%rd42+45], %r99;
	st.u8 	[%rd42+44], %r96;
	mov.b32 	 %r100, %f112;
	st.u8 	[%rd42+48], %r100;
	shr.u32 	%r101, %r100, 24;
	st.u8 	[%rd42+51], %r101;
	shr.u32 	%r102, %r100, 16;
	st.u8 	[%rd42+50], %r102;
	shr.u32 	%r103, %r100, 8;
	st.u8 	[%rd42+49], %r103;
	mov.b32 	 %r104, %f113;
	st.u8 	[%rd42+52], %r104;
	shr.u32 	%r105, %r104, 24;
	st.u8 	[%rd42+55], %r105;
	shr.u32 	%r106, %r104, 16;
	st.u8 	[%rd42+54], %r106;
	shr.u32 	%r107, %r104, 8;
	st.u8 	[%rd42+53], %r107;
	mov.b32 	 %r108, %f114;
	st.u8 	[%rd42+56], %r108;
	shr.u32 	%r109, %r108, 24;
	st.u8 	[%rd42+59], %r109;
	shr.u32 	%r110, %r108, 16;
	st.u8 	[%rd42+58], %r110;
	shr.u32 	%r111, %r108, 8;
	st.u8 	[%rd42+57], %r111;
	mov.b32 	 %r112, %f16;
	shr.u32 	%r113, %r112, 24;
	st.u8 	[%rd42+63], %r113;
	shr.u32 	%r114, %r112, 16;
	st.u8 	[%rd42+62], %r114;
	shr.u32 	%r115, %r112, 8;
	st.u8 	[%rd42+61], %r115;
	st.u8 	[%rd42+60], %r112;
	st.u8 	[%rd42+64], %r49;
	shr.u32 	%r116, %r49, 24;
	st.u8 	[%rd42+67], %r116;
	shr.u32 	%r117, %r49, 16;
	st.u8 	[%rd42+66], %r117;
	shr.u32 	%r118, %r49, 8;
	st.u8 	[%rd42+65], %r118;
	st.u8 	[%rd42+68], %r50;
	shr.u32 	%r119, %r50, 24;
	st.u8 	[%rd42+71], %r119;
	shr.u32 	%r120, %r50, 16;
	st.u8 	[%rd42+70], %r120;
	shr.u32 	%r121, %r50, 8;
	st.u8 	[%rd42+69], %r121;
	st.u8 	[%rd42+72], %r51;
	shr.u32 	%r122, %r51, 24;
	st.u8 	[%rd42+75], %r122;
	shr.u32 	%r123, %r51, 16;
	st.u8 	[%rd42+74], %r123;
	shr.u32 	%r124, %r51, 8;
	st.u8 	[%rd42+73], %r124;
	mov.u16 	%rs1, 0;
	st.u8 	[%rd42+76], %rs1;

BB0_11:
	ld.local.u32 	%r196, [%rd3+64];
	setp.ne.s32	%p12, %r196, 0;
	setp.gt.s32	%p13, %r204, -1;
	and.pred  	%p14, %p13, %p12;
	@!%p14 bra 	BB0_19;
	bra.uni 	BB0_12;

BB0_12:
	ld.local.u32 	%r11, [%rd3+72];
	cvt.rn.f32.s32	%f44, %r11;
	ld.local.f32 	%f126, [%rd6+12];
	setp.neu.f32	%p15, %f44, %f126;
	setp.eq.s32	%p16, %r11, -1;
	or.pred  	%p17, %p15, %p16;
	@%p17 bra 	BB0_14;
	bra.uni 	BB0_13;

BB0_14:
	ld.local.f32 	%f128, [%rd6+-4];
	setp.neu.f32	%p18, %f44, %f128;
	or.pred  	%p20, %p18, %p16;
	@%p20 bra 	BB0_16;
	bra.uni 	BB0_15;

BB0_16:
	ld.local.f32 	%f129, [%rd6+8];
	setp.neu.f32	%p21, %f129, 0f00000000;
	add.s32 	%r204, %r204, 1;
	@%p21 bra 	BB0_18;
	bra.uni 	BB0_17;

BB0_18:
	ld.local.v2.u64 	{%rd64, %rd65}, [%rd6];
	st.local.v2.u64 	[%rd6+16], {%rd64, %rd65};
	ld.local.v2.u64 	{%rd68, %rd69}, [%rd8];
	st.local.v2.u64 	[%rd8+16], {%rd68, %rd69};
	ld.local.f32 	%f135, [%rd3+44];
	ld.local.f32 	%f136, [%rd3+76];
	ld.local.f32 	%f137, [%rd3+40];
	ld.local.f32 	%f138, [%rd3+52];
	ld.local.f32 	%f139, [%rd3+48];
	ld.local.f32 	%f140, [%rd3+56];
	st.local.v4.f32 	[%rd6], {%f135, %f137, %f136, %f44};
	st.local.v2.f32 	[%rd8], {%f139, %f138};
	st.local.f32 	[%rd8+8], %f140;
	bra.uni 	BB0_19;

BB0_13:
	st.local.v4.f32 	[%rd6], {%f53, %f53, %f53, %f53};
	st.local.v4.f32 	[%rd8], {%f53, %f53, %f53, %f53};
	add.s32 	%r204, %r204, -1;
	bra.uni 	BB0_19;

BB0_15:
	ld.local.v2.u64 	{%rd56, %rd57}, [%rd6];
	st.local.v2.u64 	[%rd6+-16], {%rd56, %rd57};
	ld.local.v2.u64 	{%rd60, %rd61}, [%rd8];
	st.local.v2.u64 	[%rd8+-16], {%rd60, %rd61};
	add.s32 	%r204, %r204, -1;
	bra.uni 	BB0_19;

BB0_17:
	ld.local.f32 	%f130, [%rd3+44];
	ld.local.f32 	%f131, [%rd3+40];
	ld.local.f32 	%f132, [%rd3+52];
	ld.local.f32 	%f133, [%rd3+48];
	ld.local.f32 	%f134, [%rd3+56];
	st.local.v2.f32 	[%rd6+16], {%f130, %f131};
	st.local.f32 	[%rd6+28], %f44;
	st.local.v2.f32 	[%rd8+16], {%f133, %f132};
	st.local.f32 	[%rd8+24], %f134;

BB0_19:
	ld.local.u32 	%r197, [%rd3+28];
	add.s32 	%r198, %r197, 1;
	st.local.u32 	[%rd3+28], %r198;
	ld.global.u32 	%r205, [max_depth];
	setp.ge.u32	%p22, %r198, %r205;
	@%p22 bra 	BB0_21;
	bra.uni 	BB0_20;

BB0_21:
	ld.global.u32 	%r199, [samples_te];
	add.s32 	%r201, %r201, 1;
	setp.lt.u32	%p23, %r201, %r199;
	@%p23 bra 	BB0_1;

	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.local .align 16 .b8 	__local_depot1[400];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<43>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<119>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<113>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r75), _rt_get_exception_code, ();
	// inline asm
	// inline asm
	call (%r76), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r76, 1020;
	@%p1 bra 	BB1_61;
	bra.uni 	BB1_1;

BB1_61:
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r74, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r116), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p42, %r116, 0;
	@%p42 bra 	BB1_63;

	add.u64 	%rd107, %SP, 384;
	cvta.to.local.u64 	%rd108, %rd107;
	st.local.v2.u32 	[%rd108], {%r72, %r73};
	st.local.u32 	[%rd108+8], %r74;
	mov.u64 	%rd109, $str;
	cvta.global.u64 	%rd110, %rd109;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd110;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd107;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r117, [retval0+0];
	
	//{
	}// Callseq End 18
	bra.uni 	BB1_63;

BB1_1:
	setp.eq.s32	%p2, %r76, 1005;
	@%p2 bra 	BB1_59;
	bra.uni 	BB1_2;

BB1_59:
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r114), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r114, 0;
	@%p41 bra 	BB1_63;

	add.u64 	%rd103, %SP, 384;
	cvta.to.local.u64 	%rd104, %rd103;
	st.local.v2.u32 	[%rd104], {%r69, %r70};
	st.local.u32 	[%rd104+8], %r71;
	mov.u64 	%rd105, $str1;
	cvta.global.u64 	%rd106, %rd105;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd106;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd103;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r115, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB1_63;

BB1_2:
	setp.eq.s32	%p3, %r76, 1021;
	@%p3 bra 	BB1_53;
	bra.uni 	BB1_3;

BB1_53:
	ld.volatile.global.u32 	%r63, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r65, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd18, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r67, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u64 	%rd19, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd112, 1;
	setp.lt.u32	%p38, %r63, 2;
	mov.u64 	%rd111, %rd112;
	@%p38 bra 	BB1_55;

	ld.volatile.global.u64 	%rd111, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB1_55:
	setp.lt.u32	%p39, %r63, 3;
	@%p39 bra 	BB1_57;

	ld.volatile.global.u64 	%rd112, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB1_57:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd24, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd25, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r112), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p40, %r112, 0;
	@%p40 bra 	BB1_63;

	add.u64 	%rd99, %SP, 296;
	cvta.to.local.u64 	%rd100, %rd99;
	st.local.v2.u32 	[%rd100], {%r64, %r65};
	st.local.v2.u32 	[%rd100+8], {%r66, %r63};
	st.local.u32 	[%rd100+24], %r67;
	st.local.u32 	[%rd100+56], %r68;
	st.local.u64 	[%rd100+16], %rd18;
	st.local.u64 	[%rd100+32], %rd19;
	st.local.u64 	[%rd100+40], %rd111;
	st.local.u64 	[%rd100+48], %rd112;
	st.local.u64 	[%rd100+64], %rd24;
	st.local.u64 	[%rd100+72], %rd25;
	st.local.u64 	[%rd100+80], %rd26;
	mov.u64 	%rd101, $str2;
	cvta.global.u64 	%rd102, %rd101;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd102;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd99;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r113, [retval0+0];
	
	//{
	}// Callseq End 16

BB1_63:
	ret;

BB1_3:
	setp.eq.s32	%p4, %r76, 1006;
	add.u64 	%rd27, %SP, 272;
	cvta.to.local.u64 	%rd28, %rd27;
	add.s64 	%rd1, %rd28, 4;
	@%p4 bra 	BB1_44;
	bra.uni 	BB1_4;

BB1_44:
	ld.volatile.global.u32 	%r105, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p32, %r105, 1;
	@%p32 bra 	BB1_51;

	setp.eq.s32	%p33, %r105, 2;
	@%p33 bra 	BB1_49;
	bra.uni 	BB1_46;

BB1_49:
	ld.volatile.global.u32 	%r56, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r57, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r59, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd16, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r108), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r108, 0;
	@%p36 bra 	BB1_63;

	st.local.u32 	[%rd28], %r56;
	st.local.u32 	[%rd1], %r57;
	st.local.v2.u32 	[%rd1+4], {%r58, %r59};
	st.local.u64 	[%rd1+12], %rd16;
	mov.u64 	%rd91, $str4;
	cvta.global.u64 	%rd92, %rd91;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd92;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r109, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB1_63;

BB1_4:
	setp.eq.s32	%p5, %r76, 1007;
	add.u64 	%rd29, %SP, 256;
	cvta.to.local.u64 	%rd30, %rd29;
	add.s64 	%rd2, %rd30, 4;
	@%p5 bra 	BB1_35;
	bra.uni 	BB1_5;

BB1_35:
	ld.volatile.global.u32 	%r98, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p26, %r98, 1;
	@%p26 bra 	BB1_42;

	setp.eq.s32	%p27, %r98, 2;
	@%p27 bra 	BB1_40;
	bra.uni 	BB1_37;

BB1_40:
	ld.volatile.global.u32 	%r45, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r46, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r47, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r48, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r101), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p30, %r101, 0;
	@%p30 bra 	BB1_63;

	st.local.u32 	[%rd30], %r45;
	st.local.u32 	[%rd2], %r46;
	st.local.v2.u32 	[%rd2+4], {%r47, %r48};
	mov.u64 	%rd79, $str7;
	cvta.global.u64 	%rd80, %rd79;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r102, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB1_63;

BB1_5:
	setp.eq.s32	%p6, %r76, 1018;
	@%p6 bra 	BB1_26;
	bra.uni 	BB1_6;

BB1_26:
	ld.volatile.global.u32 	%r91, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p20, %r91, 1;
	@%p20 bra 	BB1_33;

	setp.eq.s32	%p21, %r91, 2;
	@%p21 bra 	BB1_31;
	bra.uni 	BB1_28;

BB1_31:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r94), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p24, %r94, 0;
	@%p24 bra 	BB1_63;

	mov.u64 	%rd63, $str11;
	cvta.global.u64 	%rd64, %rd63;
	add.u64 	%rd65, %SP, 224;
	cvta.to.local.u64 	%rd66, %rd65;
	st.local.u64 	[%rd66], %rd64;
	st.local.u64 	[%rd66+24], %rd13;
	st.local.v2.u32 	[%rd66+8], {%r35, %r36};
	st.local.v2.u32 	[%rd66+16], {%r37, %r38};
	mov.u64 	%rd67, $str10;
	cvta.global.u64 	%rd68, %rd67;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd68;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd65;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r95, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB1_63;

BB1_51:
	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r61, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd17, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r110), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p37, %r110, 0;
	@%p37 bra 	BB1_63;

	st.local.u32 	[%rd28], %r60;
	st.local.u32 	[%rd1], %r61;
	st.local.u32 	[%rd1+4], %r62;
	st.local.u64 	[%rd1+12], %rd17;
	mov.u64 	%rd95, $str3;
	cvta.global.u64 	%rd96, %rd95;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd96;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r111, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB1_63;

BB1_46:
	setp.ne.s32	%p34, %r105, 3;
	@%p34 bra 	BB1_63;

	ld.volatile.global.u32 	%r52, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r53, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r54, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r55, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r106), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p35, %r106, 0;
	@%p35 bra 	BB1_63;

	st.local.u32 	[%rd28], %r52;
	st.local.u32 	[%rd1], %r53;
	st.local.v2.u32 	[%rd1+4], {%r54, %r55};
	st.local.u64 	[%rd1+12], %rd15;
	mov.u64 	%rd87, $str5;
	cvta.global.u64 	%rd88, %rd87;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r107, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB1_63;

BB1_6:
	setp.eq.s32	%p7, %r76, 1019;
	@%p7 bra 	BB1_24;
	bra.uni 	BB1_7;

BB1_24:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd11, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r89), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r89, 0;
	@%p19 bra 	BB1_63;

	add.u64 	%rd55, %SP, 176;
	cvta.to.local.u64 	%rd56, %rd55;
	st.local.v2.u32 	[%rd56], {%r28, %r29};
	st.local.u32 	[%rd56+8], %r30;
	st.local.u64 	[%rd56+16], %rd9;
	st.local.u64 	[%rd56+24], %rd10;
	st.local.u64 	[%rd56+32], %rd11;
	mov.u64 	%rd57, $str13;
	cvta.global.u64 	%rd58, %rd57;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd58;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd55;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r90, [retval0+0];
	
	//{
	}// Callseq End 6
	bra.uni 	BB1_63;

BB1_42:
	ld.volatile.global.u32 	%r49, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r50, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r51, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r103), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p31, %r103, 0;
	@%p31 bra 	BB1_63;

	add.u64 	%rd81, %SP, 384;
	cvta.to.local.u64 	%rd82, %rd81;
	st.local.v2.u32 	[%rd82], {%r49, %r50};
	st.local.u32 	[%rd82+8], %r51;
	mov.u64 	%rd83, $str6;
	cvta.global.u64 	%rd84, %rd83;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd84;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd81;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r104, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB1_63;

BB1_37:
	setp.ne.s32	%p28, %r98, 3;
	@%p28 bra 	BB1_63;

	ld.volatile.global.u32 	%r42, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r43, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r44, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r99), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r99, 0;
	@%p29 bra 	BB1_63;

	add.u64 	%rd73, %SP, 384;
	cvta.to.local.u64 	%rd74, %rd73;
	st.local.v2.u32 	[%rd74], {%r42, %r43};
	st.local.u32 	[%rd74+8], %r44;
	mov.u64 	%rd75, $str8;
	cvta.global.u64 	%rd76, %rd75;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd76;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd73;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r100, [retval0+0];
	
	//{
	}// Callseq End 10
	bra.uni 	BB1_63;

BB1_7:
	setp.eq.s32	%p8, %r76, 1022;
	@%p8 bra 	BB1_22;
	bra.uni 	BB1_8;

BB1_22:
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r87), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p18, %r87, 0;
	@%p18 bra 	BB1_63;

	mov.b32 	 %f1, %r19;
	cvt.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r20;
	cvt.f64.f32	%fd2, %f2;
	mov.b32 	 %f3, %r21;
	cvt.f64.f32	%fd3, %f3;
	mov.b32 	 %f4, %r22;
	cvt.f64.f32	%fd4, %f4;
	mov.b32 	 %f5, %r23;
	cvt.f64.f32	%fd5, %f5;
	mov.b32 	 %f6, %r24;
	cvt.f64.f32	%fd6, %f6;
	mov.b32 	 %f7, %r26;
	cvt.f64.f32	%fd7, %f7;
	mov.b32 	 %f8, %r27;
	cvt.f64.f32	%fd8, %f8;
	add.u64 	%rd51, %SP, 80;
	cvta.to.local.u64 	%rd52, %rd51;
	st.local.v2.u32 	[%rd52], {%r16, %r17};
	st.local.u32 	[%rd52+8], %r18;
	st.local.u32 	[%rd52+72], %r25;
	st.local.u64 	[%rd52+16], %rd8;
	st.local.f64 	[%rd52+24], %fd1;
	st.local.f64 	[%rd52+32], %fd2;
	st.local.f64 	[%rd52+40], %fd3;
	st.local.f64 	[%rd52+48], %fd4;
	st.local.f64 	[%rd52+56], %fd5;
	st.local.f64 	[%rd52+64], %fd6;
	st.local.f64 	[%rd52+80], %fd7;
	st.local.f64 	[%rd52+88], %fd8;
	mov.u64 	%rd53, $str14;
	cvta.global.u64 	%rd54, %rd53;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd54;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r88, [retval0+0];
	
	//{
	}// Callseq End 5
	bra.uni 	BB1_63;

BB1_33:
	ld.volatile.global.u32 	%r39, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r40, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r41, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r96), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p25, %r96, 0;
	@%p25 bra 	BB1_63;

	st.local.u32 	[%rd28], %r39;
	st.local.u32 	[%rd1], %r40;
	st.local.u32 	[%rd1+4], %r41;
	st.local.u64 	[%rd1+12], %rd14;
	mov.u64 	%rd71, $str9;
	cvta.global.u64 	%rd72, %rd71;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd72;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r97, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB1_63;

BB1_28:
	setp.ne.s32	%p22, %r91, 3;
	@%p22 bra 	BB1_63;

	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd12, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	// inline asm
	call (%r92), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p23, %r92, 0;
	@%p23 bra 	BB1_63;

	st.local.u32 	[%rd28], %r31;
	st.local.u32 	[%rd1], %r32;
	st.local.v2.u32 	[%rd1+4], {%r33, %r34};
	st.local.u64 	[%rd1+12], %rd12;
	mov.u64 	%rd61, $str12;
	cvta.global.u64 	%rd62, %rd61;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r93, [retval0+0];
	
	//{
	}// Callseq End 7
	bra.uni 	BB1_63;

BB1_8:
	setp.eq.s32	%p9, %r76, 1003;
	@%p9 bra 	BB1_20;
	bra.uni 	BB1_9;

BB1_20:
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail3E];
	// inline asm
	call (%r85), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p17, %r85, 0;
	@%p17 bra 	BB1_63;

	add.u64 	%rd47, %SP, 32;
	cvta.to.local.u64 	%rd48, %rd47;
	st.local.v2.u32 	[%rd48], {%r13, %r14};
	st.local.u32 	[%rd48+8], %r15;
	st.local.u64 	[%rd48+16], %rd4;
	st.local.u64 	[%rd48+24], %rd5;
	st.local.u64 	[%rd48+32], %rd6;
	st.local.u64 	[%rd48+40], %rd7;
	mov.u64 	%rd49, $str15;
	cvta.global.u64 	%rd50, %rd49;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd47;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r86, [retval0+0];
	
	//{
	}// Callseq End 4
	bra.uni 	BB1_63;

BB1_9:
	setp.eq.s32	%p10, %r76, 1004;
	@%p10 bra 	BB1_18;
	bra.uni 	BB1_10;

BB1_18:
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd3, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r83), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p16, %r83, 0;
	@%p16 bra 	BB1_63;

	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	st.local.v2.u32 	[%rd44], {%r9, %r10};
	st.local.u32 	[%rd44+8], %r11;
	st.local.u32 	[%rd44+24], %r12;
	st.local.u64 	[%rd44+16], %rd3;
	mov.u64 	%rd45, $str16;
	cvta.global.u64 	%rd46, %rd45;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd43;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r84, [retval0+0];
	
	//{
	}// Callseq End 3
	bra.uni 	BB1_63;

BB1_10:
	add.s32 	%r2, %r76, -1024;
	setp.lt.u32	%p11, %r2, 64512;
	@%p11 bra 	BB1_16;
	bra.uni 	BB1_11;

BB1_16:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r81), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r81, 0;
	@%p15 bra 	BB1_63;

	add.s32 	%r118, %r76, -1024;
	st.local.u32 	[%rd30], %r118;
	st.local.u32 	[%rd2], %r6;
	st.local.v2.u32 	[%rd2+4], {%r7, %r8};
	mov.u64 	%rd41, $str17;
	cvta.global.u64 	%rd42, %rd41;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd42;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r82, [retval0+0];
	
	//{
	}// Callseq End 2
	bra.uni 	BB1_63;

BB1_11:
	setp.eq.s32	%p12, %r76, 1023;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p12 bra 	BB1_14;
	bra.uni 	BB1_12;

BB1_14:
	// inline asm
	call (%r79), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r79, 0;
	@%p14 bra 	BB1_63;

	add.u64 	%rd35, %SP, 384;
	cvta.to.local.u64 	%rd36, %rd35;
	st.local.v2.u32 	[%rd36], {%r3, %r4};
	st.local.u32 	[%rd36+8], %r5;
	mov.u64 	%rd37, $str18;
	cvta.global.u64 	%rd38, %rd37;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r80, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB1_63;

BB1_12:
	// inline asm
	call (%r77), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r77, 0;
	@%p13 bra 	BB1_63;

	add.u64 	%rd31, %SP, 384;
	cvta.to.local.u64 	%rd32, %rd31;
	st.local.v2.u32 	[%rd32], {%r3, %r4};
	st.local.u32 	[%rd32+8], %r5;
	mov.u64 	%rd33, $str19;
	cvta.global.u64 	%rd34, %rd33;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r78, [retval0+0];
	
	//{
	}// Callseq End 0
	bra.uni 	BB1_63;
}


